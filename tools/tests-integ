#!/usr/bin/env python3


import argparse
import os
import subprocess
import boto3


def get_args() -> argparse.Namespace:
    """
    Return arguments from the command line
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("service")

    return parser.parse_args()


def tests_integ(service: str):
    """
    Run integration tests for a service
    """

    ssm = boto3.client("ssm")

    try:
        env = ssm.get_parameter(Name="/ecommerce/{}/environment".format(service))
    except:
        raise ValueError("SSM parameter '/ecommerce/{}/environment' not found".format(service))

    if env["Parameter"]["Value"].lower() == "prod":
        raise ValueError("Prod environment detected")

    tests_dir = os.path.join(service, "tests", "integ")
    if not os.path.isdir(tests_dir):
        raise ValueError("'{}' does not exist".format(tests_dir))

    subprocess.run(["pytest", tests_dir])


if __name__ == "__main__":
    args = get_args()
    tests_integ(args.service)