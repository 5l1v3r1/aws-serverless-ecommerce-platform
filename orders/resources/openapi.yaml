openapi: "3.0.2"
info:
  title: Orders API
  version: 1.0.0
  description: Orders service API definition
  license:
    name: MIT-0

paths:
  /:
    get:
      description: |
        Retrieve orders belonging to the user.
      operationId: getOrders
      responses:
        200:
          description: Array of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: list
                    items:
                      $ref: "schemas.yaml#/Order"
        default:
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/Message"
      security:
        - UserPool: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetOrdersFunction.Arn}/invocations"
    post:
      description: |
        Create a new order.

        This will try to create a new order or return a 4XX error message
        containing the correct information.

        This operation is a control point to transform unvalidated customer input
        into an order that can be trusted by other services.
      operationId: createOrder
      security:
        - UserPool: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        200:
          description: Newly created order
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/Order"
        4XX:
          description: User error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "schemas.yaml#/Message"
                  - $ref: "#/components/schemas/OrderRequest"
        default:
          description: Something went wrong
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/Message"
      security:
        - UserPool: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateOrderFunction.Arn}/invocations"

components:
  schemas:
    OrderRequest:
      type: object
      description: Information necessary for creating an order.
      properties:
        products:
          type: array
          items:
            $ref: "schemas.yaml#/Product"
        address:
          $ref: "schemas.yaml/#Address"
        deliveryPrice:
          type: integer
          minimum: 0
        total:
          type: integer
          minimum: 0
  securitySchemes:
    UserPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - "arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPool}"
