AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'


Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name
  RetentionInDays:
    Type: Number
    Default: 30
    Description: CloudWatch Logs retention period for Lambda functions
  EventBusName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: EventBridge Event Bus Name
    Default: /ecommerce/platform/event-bus/name


Globals:
  Function:
    Runtime: python3.8
    Timeout: 30
    Tracing: Active
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        EVENT_BUS_NAME: !Ref EventBusName
        TABLE_NAME: !Ref Table
        POWERTOOLS_SERVICE_NAME: products
        POWERTOOLS_TRACE_DISABLED: "false"
        LOG_LEVEL: INFO


Resources:
  EnvironmentParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ecommerce/products/environment
      Type: String
      Value: !Ref Environment

  #########
  # TABLE #
  #########
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: productId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: productId
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  TableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ecommerce/products/table/name
      Type: String
      Value: !Ref Table

  #############
  # FUNCTIONS #
  #############
  ValidateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: validate.handler
      CodeUri: src/validate/
      Events:
        BackendApi:
          Type: Api
          Properties:
            Path: /backend/validate
            Method: POST
            RestApiId: !Ref Api
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table

  ValidateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ValidateFunction}"
      RetentionInDays: !Ref RetentionInDays

  TableUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: table_update.handler
      CodeUri: src/table_update/
      Events:
        DynamoDB:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt Table.StreamArn
            StartingPosition: TRIM_HORIZON
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - events:PutEvents
              Resource: "*"

  TableUpdateLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${TableUpdateFunction}"
      RetentionInDays: !Ref RetentionInDays

  ###############
  # API GATEWAY #
  ###############

  Api:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionBody:
        Fn::Transform:
          Name: "AWS::Include"
          Parameters:
            Location: "resources/openapi.yaml"
      StageName: Prod
      TracingEnabled: true

  ApiUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /ecommerce/products/api/url
      Type: String
      Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod"