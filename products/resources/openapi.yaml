openapi: "3.0.2"
info:
  title: Products API
  version: 1.0.0
  description: Products service API definition
  license:
    name: MIT-0
    url: https://github.com/aws/mit-0

paths:
  /:
    get:
      description: |
        Retrieve products.
      operationId: getProducts
      parameters:
        - in: query
          name: nextToken
          description: Continuation token
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - products
                properties:
                  products:
                    type: array
                    items:
                      $ref: "../../shared/resources/schemas.yaml#Product"
                  nextToken:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#/Message"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProductsFunction.Arn}/invocations"
      

  /{productId}:
    get:
      description: |
        Retrieve information about a single item.
      operationId: getProduct
      parameters:
        - name: productId
          in: path
          description: Product ID in UUID format
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#Product"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#/Message"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProductFunction.Arn}/invocations"    


  /backend/validate:
    post:
      description: |
        Validates an array of products.

        __Remark__: This is an internal API that requires valid IAM credentials
        and signature.
      operationId: backendValidateProducts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "../../shared/resources/schemas.yaml#/Products"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      # By not using the 'Products' schema, it makes products optional
                      products:
                        $ref: "../../shared/resources/schemas.yaml#/Product"
                  - $ref: "../../shared/resources/schemas.yaml#/Message"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "../../shared/resources/schemas.yaml#/Message"
      x-amazon-apigateway-auth:
        type: AWS_IAM
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        type: aws_proxy
        uri:
          Fn::Sub: "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ValidateFunction.Arn}/invocations"
